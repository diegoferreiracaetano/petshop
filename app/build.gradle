apply plugin: 'com.android.application'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries;
def test = rootProject.ext.testingLibraries;

android {


    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        resConfigs "auto"
        applicationId cfg.package
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.compileVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        // Enabling multidex support.
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    //Android dependencies
    compile "com.android.support:appcompat-v7:$libs.supportLibraryVersion"
    compile "com.android.support:design:$libs.supportLibraryVersion"
    compile "com.android.support:support-v4:$libs.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$libs.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$libs.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout-solver:$libs.constraintLayout"
    compile "com.android.support.constraint:constraint-layout:$libs.constraintLayout"

    compile "com.jakewharton:butterknife:$libs.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$libs.butterKnifeVersion"

    compile "io.reactivex.rxjava2:rxjava:$libs.rxjava"
    compile "io.reactivex.rxjava2:rxandroid:$libs.rxandroid"

    // Dagger dependencies
    compile "com.google.dagger:dagger:$libs.daggerVersion"
    compile "com.google.dagger:dagger-android:$libs.daggerVersion"
    compile "com.google.dagger:dagger-android-support:$libs.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$libs.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$libs.daggerVersion"


    //Glibe
    compile "com.github.bumptech.glide:glide:$libs.glide"

    //Firebase
    compile "com.google.firebase:firebase-core:$libs.firebaseCore"
    compile "com.google.firebase:firebase-database:$libs.firebaseDatabase"
    compile "com.google.firebase:firebase-storage:$libs.firebaseDatabase"
    compile "com.google.firebase:firebase-crash:$libs.firebaseDatabase"

    // F
    compile "com.firebaseui:firebase-ui-database:$libs.firebaseUi"
    compile "com.firebaseui:firebase-ui-auth:$libs.firebaseUi"
    compile "com.firebaseui:firebase-ui-storage:$libs.firebaseUi"
    compile "com.firebaseui:firebase-ui:$libs.firebaseUi"

    testCompile "junit:junit:$test.junitVersion"
    testCompile "org.mockito:mockito-core:$test.mockito"

    androidTestCompile "com.android.support:support-annotations:$libs.supportLibraryVersion"
    androidTestCompile "com.android.support.test:runner:$test.runner"
    androidTestCompile "com.android.support.test:rules:$test.rules"

}


apply plugin: 'com.google.gms.google-services'